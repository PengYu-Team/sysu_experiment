<!-- 本launch为使用px4_sender进行机载控制时的机载端启动脚本 -->
<launch>
	<!-- 启动MAVROS -->
	<!-- 不同机载电脑,注意修改fcu_url至正确的端口号及波特率 -->
	<node pkg="mavros" type="mavros_node" name="mavros" output="screen">
		<!-- 不同机载电脑,注意修改fcu_url至正确的端口号及波特率 -->
		<param name="fcu_url" value="/dev/ttyUSB0:921600" />
		<param name="gcs_url" value="" />
		<param name="target_system_id" value="1" />
		<param name="target_component_id" value="1" />
		<rosparam command="load" file="$(find sysu_experiment)/config/mavros_config/px4_pluginlists.yaml" />
		<rosparam command="load" file="$(find sysu_experiment)/config/mavros_config/px4_config.yaml" />
	</node> 

	<!-- vrpn -->
	<include file="$(find vrpn_client_ros)/launch/sample.launch">
		<arg name="server" value="192.168.1.2"/>
	</include>

	<!-- run the px4_pos_estimator.cpp -->
	<node pkg="prometheus_control" type="px4_pos_estimator" name="px4_pos_estimator" output="screen">
		<!-- 0 for vicon， 1 for 激光SLAM, 2 for gazebo ground truth(仿真用) -->
		<param name="input_source" value="0" />
		<!-- 如果使用动作捕捉系统，则指定刚体名称，用于订阅vrpn节点发布的话题 -->
		<param name="object_name" value="UAV"/>
		<param name="rate_hz" value="20.0"/>
	</node>
	
	<!-- run the px4_sender.cpp -->
	<node pkg="prometheus_control" type="px4_sender" name="px4_sender" output="screen">
		<rosparam command="load" file="$(find sysu_experiment)/config/prometheus_control_config/px4_sender.yaml"/>
	</node>

	<!-- run the urg_node node-->
    <node name="urg_node" pkg="urg_node" type="urg_node" output="screen">	
        <param name="ip_address" value="192.168.0.10"/>
        <param name="frame_id" value="lidar_link"/>
        <param name="calibrate_time" value="true"/>
        <param name="publish_intensity" value="false"/>
        <param name="publish_multiecho" value="false"/>
        <param name="angle_min" value="-1.5707963"/>
        <param name="angle_max" value="1.5707963"/>
        <remap from="/scan" to="/prometheus/sensors/2Dlidar_scan" />
    </node>

	<!-- TF transform -->
	<include file="$(find sysu_experiment)/launch_basic/tf_transform.launch">
    </include>

	<!-- run the laser_to_pointcloud -->
    <node pkg="prometheus_gazebo" type="laser_to_pointcloud.py" name="laser_to_pointcloud" >
    </node>

    <!-- 启动octomap建图 -->
    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.1" />
        <!-- 发布地图的坐标系 -->
        <param name="frame_id" type="string" value="world" />
        <!-- 传感器最大感知范围 (speedup!) -->
        <param name="sensor_model/max_range" value="5.0" />
        <!-- 局部点云输入,该话题定义在3Dlidar.sdf中 (PointCloud2) -->
        <remap from="cloud_in" to="/prometheus/sensors/pcl2" />
    </node>

    <!-- 启动全局规划算法 -->
    <arg name="topic_of_global_pcl" default="/octomap_point_cloud_centers"/>
    <node pkg="prometheus_global_planning" name="global_planner_main" type="global_planner_main" output="screen">
        <remap from="/prometheus/planning/global_pcl" to="$(arg topic_of_global_pcl)" />
        <!-- 参数 -->
        <!-- 停止距离 -->
        <param name="planning/safe_distance" value="0.01" type="double"/>
        <!-- 最大搜索步数 -->
        <param name="astar/allocate_num" value="10000" type="int"/>
        <!-- 启发式函数系数 -->
        <param name="astar/lambda_heu" value="2.0" type="double"/>
        <!-- 地图分辨率 -->
        <param name="astar/resolution_astar" value="0.1" type="double"/>
        <!-- 障碍物膨胀距离，越大越安全，但太大可能会造成路径堵塞 -->
        <param name="astar/inflate" value="0.45" type="double"/>
        <!-- 二维平面规划 -->
        <param name="astar/is_2D" value="1" type="int"/>
        <!-- 飞行高度 -->
        <param name="astar/2D_fly_height" value="0.6" type="double"/>
        <!-- 地图范围 -->
        <param name="map/map_size_x" value="8.0" type="double"/>
        <param name="map/map_size_y" value="4.0" type="double"/>
        <param name="map/map_size_z" value="2.0" type="double"/>
        <param name="map/origin_x" value="-4.0" type="double"/>
        <param name="map/origin_y" value="-2.0" type="double"/>
        <param name="map/origin_z" value="0.0" type="double"/>
        <param name="map/ceil_height_" value="2.0" type="double"/>
        <param name="map/floor_height_" value="0.5" type="double"/>
    </node>

    <!-- 启动全局规划算法 -->
    <arg name="topic_of_global_pcl" default="/octomap_point_cloud_centers"/>
    <node pkg="prometheus_swarm_planning" name="swarm_planner_main" type="swarm_planner_main" output="screen" launch-prefix="gnome-terminal --tab --">
        <remap from="/prometheus/swarm_planning/global_pcl" to="$(arg topic_of_global_pcl)" />
        <!-- 参数 -->
        <!-- 二维平面规划 -->
        <param name="swarm_planner/is_2D" value="true" type="bool"/>
        <param name="swarm_planner/fly_height_2D" value="1.0" type="double"/>
        <!-- 停止距离 -->
        <param name="swarm_planner/safe_distance" value="0.01" type="double"/>
        <param name="swarm_planner/desired_vel" value="0.2" type="double"/>
        <param name="swarm_planner/time_per_path" value="1.0" type="double"/>
        <param name="swarm_planner/replan_time" value="2.0" type="double"/>
        <param name="swarm_planner/map_input" value="0" type="int"/>
        <!-- 最大搜索步数 -->
        <param name="astar/allocate_num" value="10000" type="int"/>
        <!-- 启发式函数系数 -->
        <param name="astar/lambda_heu" value="2.0" type="double"/>
        <!-- 分辨率 -->
        <param name="map/resolution" value="0.2" type="double"/>
        <!-- 障碍物膨胀距离 -->
        <param name="map/inflate" value="0.4" type="double"/>
        <!-- 地图范围 -->
        <param name="map/origin_x" value="-15.0" type="double"/>
        <param name="map/origin_y" value="-15.0" type="double"/>
        <param name="map/origin_z" value="0.0" type="double"/>
        <param name="map/map_size_x" value="30.0" type="double"/>
        <param name="map/map_size_y" value="30.0" type="double"/>
        <param name="map/map_size_z" value="5.0" type="double"/>
        <param name="map/ceil_height_" value="5.0" type="double"/>
        <param name="map/floor_height_" value="0.01" type="double"/>
    </node>

    <!-- 启动规划mission， 激光输入control_yaw_flag设为false，rgbd输入control_yaw_flag设为true -->
	<node pkg="prometheus_mission" type="planning_mission_astar" name="planning_mission_astar" output="screen" launch-prefix="gnome-terminal --">	
		<param name="planning_mission/control_yaw_flag" value="false" type="bool"/>
		<param name="planning_mission/FLY_HEIGHT" value="0.6" type="double"/>
	</node>
</launch>

